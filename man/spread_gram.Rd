% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spread_gram.R
\name{spread_gram}
\alias{spread_gram}
\title{Simulate spreading activation in a network (Main function)}
\usage{
spread_gram(
  graph,
  last_activation,
  loose = 1,
  max_iter = 1e+05,
  threshold = 1,
  threads = 0,
  verbose = TRUE
)
}
\arguments{
\item{graph}{A square \code{\link[base]{matrix}} (or
\code{\link[Matrix:dgCMatrix-class]{dgCMatrix}} representing the background
graph. Inside this adjacency matrix, each row and column of the matrix
represents a node in the graph. The values of the matrix should be either 0
or 1 (or either 0 or larger than 0), where a value of 0 indicates no
relations between two nodes. The diagonal of the matrix should be 0, as
there are no self-edges in the graph.}

\item{last_activation}{A vector that containing the last time activation
rates of all nodes. The sequence is the same as the matrix.}

\item{loose}{A scalar numeric between 0 and 1 that determines the loose (or
weight) in the calculation process.}

\item{max_iter}{Max iteration times.}

\item{threshold}{End threshold}

\item{threads}{A scalar numeric indicating the parallel threads. Default is 0
(auto-detected).}

\item{verbose}{Show verbose message}
}
\value{
A numeric vector that contains new activation
}
\description{
The ACT spreading activation formula is represented in Equation 1:
  \deqn{a(y) = \sum_x {f(x,y) \cdot a(x)} + c(y)},
  where \eqn{c(y)} represents the baseline activation of y.
  \eqn{\alpha} represents the proximity of a node in this network.
  \eqn{t} represents the iteration number
}
\examples{
# The graph G
data("graph", package = "labyrinth")

# The initial info
last_activation = c(2, 4, 3, 2, 2, 1, 5)

results <- spread_gram(graph, last_activation)
}
