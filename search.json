[{"path":[]},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://labyrinth.yinchun.su/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://labyrinth.yinchun.su/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://labyrinth.yinchun.su/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://labyrinth.yinchun.su/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://labyrinth.yinchun.su/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://labyrinth.yinchun.su/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://labyrinth.yinchun.su/articles/labyrinth.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"The introduction to labyrinth","text":"labyrinth framework initially developed tested Fedora 39 R 4.3, vignette aims demonstrate ease use Windows Subsystem Linux (WSL) environment. Specifically, presenting results using Fedora Remix WSL. get started, need prepare following dependencies. Fedora Red Hat Enterprise Linux without WSL. R 4.3. Required libraries. installed loaded, consistent environment running labyrinth.","code":"# pROC ggthemes  library(tidyverse, igraph) ## -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 -- ## v dplyr     1.1.4     v readr     2.1.5 ## v forcats   1.0.0     v stringr   1.5.1 ## v ggplot2   3.5.1     v tibble    3.2.1 ## v lubridate 1.9.3     v tidyr     1.3.1 ## v purrr     1.0.2      ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag()    masks stats::lag() ## i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(patchwork) library(labyrinth)"},{"path":"https://labyrinth.yinchun.su/articles/labyrinth.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"The introduction to labyrinth","text":"Load pre-trained model. labyrinth model trained integrating knowledge two major sources: text-based information medical corpora biological knowledge functional interaction networks. text-based component, labyrinth: 1. Extracts drug information (nomenclature, targets, indications) databases like DrugBank, CTD, ChEMBL. 2. Obtains clinical trial data Cochrane Library. 3. Mines co-occurrence patterns published literature Web Science corpus. 4. Preprocesses text data 10 million publications, including stop word removal term vectorization using Skip-gram models. 5. Quantifies structured drug-disease relationships based clinical trial phases, citation analysis, network proximity gene sets. biological component, labyrinth evaluates network proximity drug target modules disease gene modules within functional interactome network. text-based biological knowledge matrices integrated probabilistic computations, simulating process storing relevant knowledge long-term memory decision-making.","code":"drug_disease_weight <- load_data('drug_disease_weight') model <- load_data('model') dim(model) ## [1] 7686 7686"},{"path":[]},{"path":"https://labyrinth.yinchun.su/articles/labyrinth.html","id":"labyrinth-learns-mechanisms-that-mediate-specific-drug-response","dir":"Articles","previous_headings":"Reproducibility example","what":"Labyrinth learns mechanisms that mediate specific drug response","title":"The introduction to labyrinth","text":"validate approach, initially evaluated predictive accuracy across various diseases. involved assessing Spearman correlations priority scores assigned labyrinth established weights clinical trials, alongside proximity metrics drug-disease pair. Labyrinth exhibited moderate high correlations, coefficients 0.60 clinical trials 0.80 proximity, respectively. Subsequently, extended analysis encompass human diseases, aiming assess predictive performance across five clinical trial phases, including pre-clinical, phases 1 3, approved treatments. evaluated prediction performance Receiver Operating Characteristic Area Curve (ROC-AUC). illustrated Figure 3A, ROC-AUC values stages surpassed 0.90, indicating predictive success rate 90% distinguishing drugs classified clinical trial non-clinical trial. Notably, labyrinth exhibited high predictive accuracy determining drug usability Stage 3 across disease categories except occupational stomatognathic diseases (Figure 3B). Also, cardiovascular, endocrine system diseases, neoplasms garnered significant benefits labyrinth. Detailed ROC-AUC predictions diseases provided Additional File 1. ### Reproducibility statement results article can reproduced using standard R code.","code":"roc0 <- mutate(drug_disease_weight, weight = if_else(weight > 1, 1, 0)) %>%   pROC::roc(weight, score) ## Setting levels: control = 0, case = 1 ## Setting direction: controls < cases roc1 <- mutate(drug_disease_weight, weight = if_else(weight > 1.8, 1, 0)) %>%   pROC::roc(weight, score) ## Setting levels: control = 0, case = 1 ## Setting direction: controls < cases roc2 <- mutate(drug_disease_weight, weight = if_else(weight > 2, 1, 0)) %>%   pROC::roc(weight, score) ## Setting levels: control = 0, case = 1 ## Setting direction: controls < cases roc3 <- mutate(drug_disease_weight, weight = if_else(weight > 3, 1, 0)) %>%   pROC::roc(weight, score) ## Setting levels: control = 0, case = 1 ## Setting direction: controls < cases roc4 <- mutate(drug_disease_weight, weight = if_else(weight > 4, 1, 0)) %>%   pROC::roc(weight, score) ## Setting levels: control = 0, case = 1 ## Setting direction: controls < cases p1 <- pROC::ggroc(list(   roc0, roc1, roc2, roc3, roc4 )) +   scale_color_manual('Drug trials', labels = c(     paste('Stage 0:', round(roc0$auc, 3)),     paste('Stage 1:', round(roc1$auc, 3)),     paste('Stage 2:', round(roc2$auc, 3)),     paste('Stage 3:', round(roc3$auc, 3)),     paste('Stage 4:', round(roc4$auc, 3))   ), values = c('#cf4e9c', '#835921', '#8d59a3', '#368db9', '#302c2d')) +   ggthemes::theme_clean() +   theme(legend.position = 'left') rm(list = c('roc0', 'roc1', 'roc2', 'roc3', 'roc4')) # We perform ROC analysis in every single disease disease_pred <- split(select(drug_disease_weight, weight, score), drug_disease_weight$mesh_id) %>%   map(~ arrange(.x, desc(weight))) disease_pred <- pbapply::pblapply(names(disease_pred), function(n) {   x <- disease_pred[[n]]   if (nth(x$weight, 2) > 1.5) {     ci <- suppressMessages({       x %>%         mutate(weight = if_else(weight > 1.5, 1, 0)) %>%         pROC::roc(weight, score, ci = TRUE) %>%         {as.numeric(.$ci)}     })     ret <- data.frame(mesh_id = n, ci_lower = ci[1], ci_upper = ci[3], auc = ci[2])   } else {     ret <- data.frame()   }   return(ret) }) %>% bind_rows()  # Next, we divide the ROC and average them based on MeSH structures  mesh_ids <- unique(drug_disease_weight$mesh_id)  data(\"mesh_annot\") disease_cluster <- distinct(mesh_annot) %>%   mutate(parent_group = str_to_sentence(group_name)) %>%   select(!group_name) %>%   arrange(group_id) %>%   left_join(disease_pred, by = 'mesh_id') %>%   drop_na()  disease_color <- group_by(disease_cluster, group_id) %>%   summarize(color = median(auc) > 0.911) p2 <- mutate(disease_cluster, parent_group = fct_reorder(parent_group, -group_id)) %>%   left_join(disease_color, by = 'group_id') %>% ggplot(aes(x = parent_group, y = auc, fill = color)) +   geom_boxplot(alpha = 0.4) +   geom_hline(aes(yintercept = 0.911), linetype = 'dashed') +   labs(x = 'Disease categories',       y = 'Prediction AUCs') +   coord_flip() +   scale_fill_manual(values = c('#9fcdc9', '#d4bfe0')) +   ggthemes::theme_clean() +   theme(legend.position = 'none',         axis.text.y = element_text('Arial Narrow')) design <- \"   11#222   222222   222222 \" p1 + p2 + plot_layout(guides = 'collect') +   plot_annotation(tag_levels = 'A') &   theme(legend.position = 'bottom')"},{"path":"https://labyrinth.yinchun.su/articles/labyrinth.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"The introduction to labyrinth","text":"","code":"devtools::session_info() ## - Session info --------------------------------------------------------------- ##  setting  value ##  version  R version 4.4.0 (2024-04-24) ##  os       Fedora Linux 40 (Container Image) ##  system   x86_64, linux-gnu ##  ui       X11 ##  language en ##  collate  C ##  ctype    C ##  tz       Etc/UTC ##  date     2024-05-05 ##  pandoc   3.1.3 @ /usr/bin/ (via rmarkdown) ##  ## - Packages ------------------------------------------------------------------- ##  package           * version   date (UTC) lib source ##  backports           1.4.1     2021-12-13 [2] CRAN (R 4.4.0) ##  bslib               0.7.0     2024-03-29 [2] CRAN (R 4.4.0) ##  cachem              1.0.8     2023-05-01 [2] CRAN (R 4.4.0) ##  checkmate           2.3.1     2023-12-04 [2] CRAN (R 4.4.0) ##  cli                 3.6.2     2023-12-11 [2] CRAN (R 4.4.0) ##  codetools           0.2-20    2024-03-31 [2] CRAN (R 4.4.0) ##  colorspace          2.1-0     2023-01-23 [2] CRAN (R 4.4.0) ##  desc                1.4.3     2023-12-10 [2] CRAN (R 4.4.0) ##  devtools            2.4.5     2022-10-11 [2] CRAN (R 4.4.0) ##  diffusr             0.2.3     2024-05-05 [2] Bioconductor ##  digest              0.6.35    2024-03-11 [2] CRAN (R 4.4.0) ##  dplyr             * 1.1.4     2023-11-17 [2] CRAN (R 4.4.0) ##  ellipsis            0.3.2     2021-04-29 [2] CRAN (R 4.4.0) ##  evaluate            0.23      2023-11-01 [2] CRAN (R 4.4.0) ##  fansi               1.0.6     2023-12-08 [2] CRAN (R 4.4.0) ##  farver              2.1.1     2022-07-06 [2] CRAN (R 4.4.0) ##  fastmap             1.1.1     2023-02-24 [2] CRAN (R 4.4.0) ##  fastmatch           1.1-4     2023-08-18 [2] CRAN (R 4.4.0) ##  forcats           * 1.0.0     2023-01-29 [2] CRAN (R 4.4.0) ##  fs                  1.6.4     2024-04-25 [2] CRAN (R 4.4.0) ##  generics            0.1.3     2022-07-05 [2] CRAN (R 4.4.0) ##  ggplot2           * 3.5.1     2024-04-23 [2] CRAN (R 4.4.0) ##  ggthemes            5.1.0     2024-02-10 [2] CRAN (R 4.4.0) ##  glue                1.7.0     2024-01-09 [2] CRAN (R 4.4.0) ##  gtable              0.3.5     2024-04-22 [2] CRAN (R 4.4.0) ##  highr               0.10      2022-12-22 [2] CRAN (R 4.4.0) ##  hms                 1.1.3     2023-03-21 [2] CRAN (R 4.4.0) ##  htmltools           0.5.8.1   2024-04-04 [2] CRAN (R 4.4.0) ##  htmlwidgets         1.6.4     2023-12-06 [2] CRAN (R 4.4.0) ##  httpuv              1.6.15    2024-03-26 [2] CRAN (R 4.4.0) ##  igraph              2.0.3     2024-03-13 [2] CRAN (R 4.4.0) ##  jquerylib           0.1.4     2021-04-26 [2] CRAN (R 4.4.0) ##  jsonlite            1.8.8     2023-12-04 [2] CRAN (R 4.4.0) ##  knitr               1.46      2024-04-06 [2] CRAN (R 4.4.0) ##  labeling            0.4.3     2023-08-29 [2] CRAN (R 4.4.0) ##  labyrinth         * 0.3.0     2024-05-05 [1] local ##  later               1.3.2     2023-12-06 [2] CRAN (R 4.4.0) ##  lattice             0.22-6    2024-03-20 [2] CRAN (R 4.4.0) ##  lifecycle           1.0.4     2023-11-07 [2] CRAN (R 4.4.0) ##  lubridate         * 1.9.3     2023-09-27 [2] CRAN (R 4.4.0) ##  magrittr            2.0.3     2022-03-30 [2] CRAN (R 4.4.0) ##  Matrix              1.7-0     2024-04-26 [2] CRAN (R 4.4.0) ##  MatrixGenerics      1.16.0    2024-04-30 [2] Bioconductor 3.19 (R 4.4.0) ##  matrixStats         1.3.0     2024-04-11 [2] CRAN (R 4.4.0) ##  memoise             2.0.1     2021-11-26 [2] CRAN (R 4.4.0) ##  memuse              4.2-3     2023-01-24 [2] CRAN (R 4.4.0) ##  mime                0.12      2021-09-28 [2] CRAN (R 4.4.0) ##  miniUI              0.1.1.1   2018-05-18 [2] CRAN (R 4.4.0) ##  munsell             0.5.1     2024-04-01 [2] CRAN (R 4.4.0) ##  patchwork         * 1.2.0     2024-01-08 [2] CRAN (R 4.4.0) ##  pbapply             1.7-2     2023-06-27 [2] CRAN (R 4.4.0) ##  pillar              1.9.0     2023-03-22 [2] CRAN (R 4.4.0) ##  pkgbuild            1.4.4     2024-03-17 [2] CRAN (R 4.4.0) ##  pkgconfig           2.0.3     2019-09-22 [2] CRAN (R 4.4.0) ##  pkgdown             2.0.9     2024-04-18 [2] CRAN (R 4.4.0) ##  pkgload             1.3.4     2024-01-16 [2] CRAN (R 4.4.0) ##  plyr                1.8.9     2023-10-02 [2] CRAN (R 4.4.0) ##  pROC                1.18.5    2023-11-01 [2] CRAN (R 4.4.0) ##  profvis             0.3.8     2023-05-02 [2] CRAN (R 4.4.0) ##  promises            1.3.0     2024-04-05 [2] CRAN (R 4.4.0) ##  pryr                0.1.6     2023-01-17 [2] CRAN (R 4.4.0) ##  purrr             * 1.0.2     2023-08-10 [2] CRAN (R 4.4.0) ##  R6                  2.5.1     2021-08-19 [2] CRAN (R 4.4.0) ##  ragg                1.3.0     2024-03-13 [2] CRAN (R 4.4.0) ##  Rcpp                1.0.12    2024-01-09 [2] CRAN (R 4.4.0) ##  RcppEigen           0.3.4.0.0 2024-02-28 [2] CRAN (R 4.4.0) ##  RcppProgress        0.4.2     2020-02-06 [2] CRAN (R 4.4.0) ##  readr             * 2.1.5     2024-01-10 [2] CRAN (R 4.4.0) ##  remotes             2.5.0     2024-03-17 [2] CRAN (R 4.4.0) ##  rlang               1.1.3     2024-01-10 [2] CRAN (R 4.4.0) ##  rmarkdown           2.26      2024-03-05 [2] CRAN (R 4.4.0) ##  rpca                0.2.3     2015-07-31 [2] CRAN (R 4.4.0) ##  sass                0.4.9     2024-03-15 [2] CRAN (R 4.4.0) ##  scales              1.3.0     2023-11-28 [2] CRAN (R 4.4.0) ##  sessioninfo         1.2.2     2021-12-06 [2] CRAN (R 4.4.0) ##  shiny               1.8.1.1   2024-04-02 [2] CRAN (R 4.4.0) ##  sparseMatrixStats   1.16.0    2024-04-30 [2] Bioconductor 3.19 (R 4.4.0) ##  stringi             1.8.3     2023-12-11 [2] CRAN (R 4.4.0) ##  stringr           * 1.5.1     2023-11-14 [2] CRAN (R 4.4.0) ##  systemfonts         1.0.6     2024-03-07 [2] CRAN (R 4.4.0) ##  textshaping         0.3.7     2023-10-09 [2] CRAN (R 4.4.0) ##  tibble            * 3.2.1     2023-03-20 [2] CRAN (R 4.4.0) ##  tidyr             * 1.3.1     2024-01-24 [2] CRAN (R 4.4.0) ##  tidyselect          1.2.1     2024-03-11 [2] CRAN (R 4.4.0) ##  tidyverse         * 2.0.0     2023-02-22 [2] CRAN (R 4.4.0) ##  timechange          0.3.0     2024-01-18 [2] CRAN (R 4.4.0) ##  tzdb                0.4.0     2023-05-12 [2] CRAN (R 4.4.0) ##  urlchecker          1.0.1     2021-11-30 [2] CRAN (R 4.4.0) ##  usethis             2.2.3     2024-02-19 [2] CRAN (R 4.4.0) ##  utf8                1.2.4     2023-10-22 [2] CRAN (R 4.4.0) ##  vctrs               0.6.5     2023-12-01 [2] CRAN (R 4.4.0) ##  withr               3.0.0     2024-01-16 [2] CRAN (R 4.4.0) ##  xfun                0.43      2024-03-25 [2] CRAN (R 4.4.0) ##  xtable              1.8-4     2019-04-21 [2] CRAN (R 4.4.0) ##  yaml                2.3.8     2023-12-11 [2] CRAN (R 4.4.0) ##  ##  [1] /tmp/RtmpN02VB2/temp_libpathd384f3e7774 ##  [2] /usr/local/lib/R/library ##  [3] /usr/lib64/R/library ##  [4] /usr/share/R/library ##  ## ------------------------------------------------------------------------------"},{"path":"https://labyrinth.yinchun.su/articles/preface.html","id":"from-human-memory-to-activation-diffusion-network","dir":"Articles","previous_headings":"","what":"1. From human memory to activation diffusion network","title":"Introduction and inspirations of labyrinth","text":"Memory fundamental cognitive process allows brain store, acquire, recall information. serves temporary storage system sensory cues disappear (Benjamin 2007). Memory plays crucial role encoding, storing, retaining, recalling everything simple sensory data complex knowledge experiences. Additionally, memory basis learning, planning, decision-making (Benjamin 2007; Nussenbaum, Prentis, Hartley 2020). Specifically, enables us learn past experiences simulate potential future outcomes, thereby influencing current behavior future actions (Schacter et al. 2012). formation memories, recall, reasoning based involve combination systems physiological processes allow humans adapt well environment (Schacter et al. 2012; Camina Güell 2017; Nairne Pandeirada 2016).Memory formation comprises three stages: information perception, encoding, storage (Atkinson Shiffrin 1968). stages correspond three types memory: (1) sensory memory (Atkinson Shiffrin 1968) briefly stores raw physical stimuli primary receptors vision hearing; (2) short-term memory (STM) (Baddeley 2000) involves transient storage manipulation information, allowing individuals temporarily memorize small amounts data perform current future tasks; (3) long-term memory (LTM) (Camina Güell 2017) long-term storage information, divided episodic implicit memory. Episodic memory consists knowledge processed recalled conscious level, personal experiences specialized knowledge, implicit memory encompasses skills habits expressed without conscious awareness, fear, riding bicycle, heart rate regulation, conditioned reflexes (Smith Grossman 2008). contrast limited-capacity sensory memory STM, LTM complex cognitive system unlimited capacity long-term storage retrieval wide range information, including factual knowledge personal experiences. Memory can also categorized contextual memory, referring individual’s personal experiences, semantic memory, referring textual knowledge concepts (Renoult et al. 2019). Storing contextual semantic knowledge allows individuals construct new knowledge based past experiences, facilitating survival (Kazanas Altarriba 2015). addition storing information memories, LTM plays important role learning reasoning. can automatically relate relationships attributes objects (Nairne Pandeirada 2016), giving individuals ability use stored skills concepts make rational decisions evaluating different choices various environments predicting possible outcomes (Camina Güell 2017). formation consolidation LTM involve several brain regions, including prefrontal lobe, associated working memory situational memory LTM (Blumenfeld Ranganath 2019), temporal lobe, associated semantic memory LTM (Simmons Martin 2009). hippocampus acts relay station information (Squire Zola-Morgan 1991) can integrate situational memory semantic memory knowledge network stored LTM (Renoult et al. 2019). Consequently, even concept knowledge, knowledge network formed different individuals can vary. individual unique experiences backgrounds, leading different understandings reactions interpreting information. LTM stored vast complex semantic network, includes various types interconnected nodes, concepts, memories, experiences (Collins Loftus 1975). kinds memories experiences also integrated network; example, individual’s representation abstract concepts (e.g., time) may based physical sensations (Casasanto Boroditsky 2008). cases, individuals associate time experiences, forming knowledge network. form organization named semantic networks knowledge networks, emphasizing information interconnected organized according meaning (Lehmann 1992). article, use term semantic network represent form memory storage organization LTM, knowledge network refers artificially built knowledge network. semantic network, concepts represented nodes, concept--concept relationships represented edges nodes, edge weights indicating strength association. higher edge weight implies closer relationship two nodes, typically resulting higher recall rate receiving stimulus (Anderson 1983). Learning memorizing new knowledge experiences involve building new edges reinforcing existing ones. organization facilitates information retrieval enabling individuals jump one concept another network simultaneously activate neighboring nodes form knowledge connections, even direct correlation (Lehmann 1992). interesting example semantic network police officers, black people produce strong association weapons, association even stronger police officer sleep-deprived (James 2018). Another example individual’s preference Coca-Cola McDonald’s determined attitude reflected semantic network (Lee Kim 2013; Karpinski, Steinman, Hilton 2005). Homogeneous networks consist nodes similar properties characteristics (Mhatre Rosenberg 2004). Nodes represented kind elements edges connected nodes high correlations, jointly creating homogeneous network. two examples mentioned illustrate different individuals form different LTMs, memory contents stored LTMs satisfy homogeneity. Moving one concept unrelated concept impossible homogeneous network. process individuals store memories semantic network retrieve information LTM often described spreading activation, network also called spreading activation network (Sharifian Samani 1997). network model, initial node activated, activation state spreads nodes along connected edges. diffusion process can quickly span multiple network layers, extensively activating concepts memories associated initial node. node receives activation certain threshold, fully activated like neurons. Otherwise, activated. may lead recall specific memories, formation decisions, generation problem-solving strategies. mentioned earlier, unrelated concepts semantic network may relatively strong associations. implicit association test (IAT) paradigm proposed Greenwald can effectively test edge connections nodes individual semantic network (Greenwald, McGhee, Schwartz 1998; Greenwald et al. 2009). paradigm tests strength association human brain two nodes, .e., edge weights. mechanisms association activation activation diffusion networks depend strength association nodes. strength high, probability activation relatively high; strength low, higher probability non-activation. theory partly explains forgetting phenomenon occurs human memory. Additionally, activation diffusion networks enable individuals retrieve necessary information, reorganize memories, apply knowledge different situations. summary, activation diffusion networks effectively account dynamic nature memory retrieval use.","code":""},{"path":"https://labyrinth.yinchun.su/articles/preface.html","id":"unique-advantages-of-human-cognitive-abilities","dir":"Articles","previous_headings":"","what":"2. Unique advantages of human cognitive abilities","title":"Introduction and inspirations of labyrinth","text":"Compared computer programs, humans possess ability think problems different perspectives exhibit greater flexibility knowledge association (Lehmann 1992). Therefore, humans advantage applying knowledge one domain another seemingly unrelated domain. example, concepts biology can transferred economics (Lawlor et al. 2008), economic models field electronic information (Han et al. 2019), linguistic concepts neuroscience (Mayberry et al. 2018) computer science (H. Zhang et al. 2023). characteristic led humans create many cross-disciplinary fields, artificial intelligence, computational biology, neuropolitics, bioinformatics. Humans can use intuition creative thinking solve problems, ability think across domains allows make new connections different areas, thereby building new disciplinary knowledge. human brain contains approximately 100 billion neurons roughly number glial cells (Bartheld, Bahney, Herculano-Houzel 2016), connected thousands others via synapses (Herculano-Houzel 2009). Neurons glial cells form extremely complex networks. Neurons communicate via --none principle (Pareti 2007), glial cells play crucial roles central nervous system formation, neuronal differentiation, synapse formation (Allen Lyons 2018), regulation neuroinflammatory immunity (Yang Zhou 2019), neurological diseases like dementia (Kim, Choi, Yoon 2020), addition traditional supportive functions (Wolosker et al. 2008). complexity lays foundation individual’s ability process information, experience emotions, maintain awareness, exhibit creativity. Drawing fundamentals human cognition, artificial neural networks simulated using computers mimic brain’s information processing. emulate human cognitive abilities extent, excelling tasks like learning, decision-making, pattern recognition humans naturally proficient (Agatonovic-Kustrin Beresford 2000; Parisi 1997). simulation human cognitive abilities shown great potential (Parisi 1997; Zahedi 1991). However, neurons used deep learning artificial neural networks highly abstract, architecture unable account neurons (Cichy Kaiser 2019). Therefore, field focused attention fitting data rather interpreting (Pichler Hartig 2023). Currently, field deep learning concerned fitting data, effect fitting used guiding criterion field, rather integrating cognitive mechanisms discovered neuroscience (Chavlis Poirazi 2021). Much progress deep learning recent decades can attributed application backpropagation, often used optimization methods update weights minimize loss function. However, neural networks deep learning biologically inspired approaches, biological rationality backpropagation remains questionable, activated neurons acquire features backpropagation (Whittington Bogacz 2019; Lillicrap et al. 2020; Aru, Suzuki, Larkum 2020). Currently, two mainstream learning mechanisms identified human brain using electrophysiological methods: Hebbian learning (Munakata Pfaffly 2004) reinforcement learning (Botvinick et al. 2019). Additionally, synaptic pruning may related learning (Halassa Haydon 2010), epigenetic mechanisms also play important role (Changeux, Courrège, Danchin 1973). Although Hebbian learning, reinforcement learning, attempts migrate human cognitive mechanisms applied deep learning years, still perfectly reproduce human learning features (Volzhenin, Changeux, Dumas 2022). Comparatively, energy consumption using neural networks reasoning huge (Desislavov, Martínez-Plumed, Hernández-Orallo 2023), contrast human brain’s lower energy usage training reasoning (Attwell Laughlin 2001). Another example attention mechanism neural networks, inspired human attention (Vaswani et al. 2023). Attention cognitive ability selectively receives information limited resources (Nelson Cowan et al. 2005). ’s complex biological process involving multiple brain regions, encompassing selective attention also coordinated consciousness, memory, cognition. Selective attention mechanisms associated short-term memory, 3-5 chunks original stimuli can enter single session (N. Cowan 2001), attention lasting just seconds minutes (Polti, Martin, Van Wassenhove 2018). selective mechanism allows humans focus targets limited resources, reducing cognitive resource consumption (Buschman Kastner 2015), refining elements deposited memory (Chun Turk-Browne 2007), delimiting problem space, narrowing memory retrieval problem-solving situations (Wiley Jarosz 2012). Human intuition numbers may also relate attention (Kutter et al. 2023). Thus, selective attention crucial cognitive activities like perception, memory, decision-making. Attention mechanisms deep learning, inspired human selective attention, successfully integrated various frameworks (Niu, Zhong, Yu 2021), greatly improving performance tasks like natural language processing (NLP), computer vision, speech recognition (B. Zhang, Xiong, Su 2020; Guo et al. 2022; Ding et al. 2021). recent years, Transformer model, relying self-attention mechanisms process data, demonstrated superior performance across various tasks (Vaswani et al. 2023; Khan et al. 2022). multi-head attention mechanism performs multiple parallel self-attention computations different parameters, allowing model capture information different subspaces improving fitting efficiency accuracy (Liu, Liu, Han 2021). Practically, Transformer, neural networks made significant progress areas like NLP vision tasks. Attention mechanisms deep learning implemented mathematical functions assign weights different elements input data (Niu, Zhong, Yu 2021; De Santana Correia Colombini 2022). However, subset studies found attention mechanism deep learning fully simulate human attention lacks cognitive emotional context human attention encompasses (Lai et al. 2021). Despite differences, artificial neural networks successfully applied several fields, including image speech recognition, natural language processing, robot control, gaming, decision support systems. applications demonstrate power artificial neural networks dealing complex problems simulating certain human cognitive processes highlighting unique advantages models simulate human cognitive abilities.","code":""},{"path":"https://labyrinth.yinchun.su/articles/preface.html","id":"simulating-human-cognitive-abilities-the-way-forward","dir":"Articles","previous_headings":"","what":"3. Simulating Human Cognitive Abilities: The Way Forward","title":"Introduction and inspirations of labyrinth","text":"recent years, Transformer model excelled various tasks rely self-attentive mechanisms data processing (Vaswani et al. 2023; Khan et al. 2022). departs traditional recurrent neural networks (RNNs) convolutional neural networks (CNNs), favoring comprehensive utilization attentional mechanisms process sequential data. Transformer’s attention model primarily applied self-attention multi-head attention mechanisms. self-attention mechanism considers elements sequence processing input element, enabling model capture long-range dependencies within sequence (Vig Belinkov 2019). element transformed query (q), key (k), value (v) vectors, representing current lexical element, lexical elements, information contained lexical element, respectively. attention score computed calculating similarity scores q k, weighted summing v. Recently, LLMs employed Transformer’s framework, demonstrating improved simulation human cognition. LLMs large-scale simulations human cognitive functions (Binz Schulz 2023), emergence mark significant advancement computers’ ability simulate human cognition. LLMs possess enhanced reasoning capabilities, Claude 3, released month Anthropic, exhibits self-awareness contextual understanding needle---haystack task (Anthropic 2024; Kuratov et al. 2024). zero-shot problem scenarios, LLMs’ reasoning abilities without prior knowledge surpass humans, rely analogies reasoning (Webb, Holyoak, Lu 2023). Furthermore, LLMs can comprehend others’ beliefs, goals, mental states accuracy 80%. Notably, GPT-4, considered advanced LLM, can achieve 100% accuracy theory mind (ToM) tasks suitable prompting, indicating human-like level ToM (Thaler 1988). LLMs can also simulate human behavior observed experiments, ultimatum game (Thaler 1988), garden-path sentences (Ferreira, Christianson, Hollingworth 2001), loss aversion (Kimball 1993), reactions Milgram electric shock experiment (Blass 1999; Aher, Arriaga, Kalai 2022). Additionally, LLMs exhibit cognitive biases errors humans typically demonstrate, additive bias (Winter et al. 2023), individuals default adding modifying existing content rather deleting pushing back problem-solving (Adams et al. 2021). LLMs produce various human cognitive effects, including priming effects biases (Koo et al. 2023; Shaki, Kraus, Wooldridge 2023), suggesting LLMs mimicking human cognitive processes may possess cognitive abilities approaching human level. specific domains, LLMs closely mimic human-specific abilities. instance, ChatGPT’s accuracy medical diagnosis providing feasible medical advice complex situations comparable human physicians (Hopkins et al. 2023). performance metrics show diagnoses 93.3% common clinical cases correctly (Hirosawa et al. 2023). Furthermore, standardized clinical decision-making tasks, ChatGPT achieves accuracy rate close 70% (Rao et al. 2023), similar expected level third-year medical students United States (Gilson et al. 2023). Due GPT-4’s superior ToM, correctly answered 90% soft skill questions (Brin et al. 2023), demonstrating excellent clinical skills. However, ChatGPT’s ability handle complex questions remains unsatisfactory compared widely used technologies like Google search (Hopkins et al. 2023). fully replicate professional clinicians’ decision-making abilities faced complex problems, primarily due text-based training data, resulting less satisfactory performance non-text-based tasks (Y. Zhang et al. 2024). Furthermore, patient care medically related domains, sometimes generates false misleading information, potentially causing doctors, nurses, caregivers make erroneous decisions, endangering patients’ lives (Z. Ji et al. 2023). LLMs often contain billions hundreds billions parameters, making difficult implement debugging understand decision-making processes (Z. Ji et al. 2023; Khullar, Wang, Wang 2024). Therefore, developing relatively interpretable models viable alternative moment. models trained specific areas expertise, possessing prior knowledge learning exclusively samples. Recently, life2vec model successfully predicted relationship early mortality aspects individual’s personality traits, demonstrating relatively good predictive efficacy (Savcisens et al. 2023). model provides clinicians family physicians insights assistance can help patients better manage lifespan, showcasing potential specialized models.","code":""},{"path":"https://labyrinth.yinchun.su/articles/preface.html","id":"simulating-human-knowledge-representation-using-large-scale-medical-knowledge-networks","dir":"Articles","previous_headings":"","what":"4. Simulating human knowledge representation using large-scale medical knowledge networks","title":"Introduction and inspirations of labyrinth","text":"summary, found computer models simulating human cognitive abilities tend achieve good model fitting results, Transformer-based neural network models like LLMs. LLMs perform satisfactorily wide range contexts, multiple aspects addressed adequately addition aforementioned medical issues. LLMs require enormous number parameters vast amount training data, consuming substantial computational resources training process (S. Zhang et al. 2022). Even training, reasoning LLMs consumes significant computational resources (Samsi et al. 2023). Furthermore, LLMs produce large carbon footprint (S. Zhang et al. 2022; Faiz et al. 2023) require considerable water consumption cooling (George, .S.Hovan George, .S.Gabrio Martin 2023), exacerbating environmental concerns extreme climate events. computational power concentrated labs, LLM also exacerbates inequality issues prevents labs gaining LLMs (S. Zhang et al. 2022). LLMs often considered black boxes, making difficult understand explain operating mechanisms. Recently, OpenAI demonstrated early forms artificial intelligence LLMs increasing parameters training sample size (OpenAI et al. 2023; Bubeck et al. 2023; Schaeffer, Miranda, Koyejo 2023; Wei et al. 2022), challenging many scholars’ perceptions. argued resembles Chinese room problem, LLMs emerge intelligence rather acquire deeper features language, consciousness may special form language (Hamid 2023). Others contend emergent intelligence LLMs merely wishful thinking researchers (Schaeffer, Miranda, Koyejo 2023). Alternatively, proposed LLMs resemble human societies, large number individuals collectively exhibit abilities individuals possess, emergent capabilities resulting complex relationships numerous data points, akin ant colony algorithms. suspect possible reasons emergence regarding capabilities demonstrated LLMs. noted earlier, developing relatively interpretable specialized models maximize usability transparency, making safer clinical applications. past decades, humans accumulated substantial historical experience fighting diseases large number low-practice-value papers monographs (Hanson et al. 2023). Translating experience clinical resources bulk become important issue modern medical research. observed clinicians tend treat patients automatically based diseases considering comorbidities patients may , e.g., heart disease, high cholesterol, bacterial infections. aimed develop model simulate ability maintaining model interpretability. Therefore, adapted original spreading activation model replacing LTM knowledge network substituting memory search inference random walk approach simulate human abilities. LLMs often trained using knowledge publications, promising life2vec model uses medical information Danish citizens. , use medical texts build knowledge networks train models. knowledge network large-scale, graph-structured database abstracts core concepts relationships reality, allowing AI systems understand complex relationships reason . can integrate various data sources types represent relationships elements properties. Knowledge networks abstract real world AI systems (Martin Baggio 2020), enabling solve complex tasks reason world (S. Ji et al. 2022). Biomedical knowledge characterized using formalism, abstraction process human brain model systems formally mathematically (Phillips 2020). Although biomedical knowledge use formulas describe biological processes like mathematics, physics, chemistry, knowledge networks can establish mechanisms involved biological processes (Martin Baggio 2020). example, biologists usually use nodes represent genes edges represent regulatory relationships genes. knowledge network constructed, can simulate humans utilize LTM choosing random walk approach. Numerous studies shown random walk can effectively simulate human semantic cognition (S. Ji et al. 2022; Kumar, Steyvers, Balota 2021) consistent human memory retrieval process. Compared outputs spreading activation, computer-simulated random walks showed higher correlation spreading activation model’s results (Abbott, Austerweil, Griffiths 2015; Zemla Austerweil 2018; Siew 2019). Furthermore, brain scientists used random walk algorithms explore theoretical concepts (Abbott, Austerweil, Griffiths 2015; Siew 2019) simulate specific human cognitive behaviors reduce experimental errors introduced external environments (Abbott, Austerweil, Griffiths 2015; Zemla Austerweil 2018). Similar repeated, random selection various possible solutions human brain, random walk simulates random events exists individual problem-solving decision-making processes. diffusion model, applicable wide range situations, even computer-simulated human societies (Park et al. 2023), demonstrating broad applicability computer models many different biological scenarios.","code":""},{"path":"https://labyrinth.yinchun.su/articles/preface.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"5. Conclusion","title":"Introduction and inspirations of labyrinth","text":"Humans excel employing existing problem-solving strategies (Kaula 1995). rapid advancement computer technology, surge research articles drug repositioning aided computational biology bioinformatics. Figure \\(\\ref{fig:banana}\\) demonstrates relative number articles drug repositioning included PubMed, shows increasing trend years significant rise recent years. calculation method also exhibits increasing trend. banana metric proven effective quantifying analyzing research interest trends across various fields, defined number articles retrieved using banana keyword per year (Dalmaijer et al. 2021). Bibliometric analysis drug repurposing. Drug repurposing gains significant attention since 2010. adopted banana scale depict trend. observed clinicians tend treat patients symptomatically based diseases considering comorbidities patients may , example, heart disease, hyperlipidemia, bacterial infections. aimed develop model simulate ability maintaining interpretability. Therefore, adapted original spreading activation theory replacing LTM knowledge network substituting memory search inference random walk approach simulate human abilities.","code":""},{"path":[]},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"setting-up-environment","dir":"Articles","previous_headings":"","what":"Setting up environment","title":"Training the model","text":"developed tested labyrinth Fedora Linux version 38 39. package contain operating system-specific code, tested operating systems. theory, labyrinth work Unix-like operating systems long required dependencies installed. need rebuild model, strongly recommended use Fedora Linux downstream operating system (.e., Red Hat Enterprise Linux, CentOS Stream, Rocky Linux, Alma Linux) follow instructions . Using different environment may lead unexpected issues differences results.","code":""},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"red-hat-enterprise-linux-rocky-linux-alma-linux-and-centos-stream","dir":"Articles","previous_headings":"Setting up environment","what":"Red Hat Enterprise Linux, Rocky Linux, Alma Linux, and CentOS Stream","title":"Training the model","text":"Fedora RPMs R ported CentOS/RHEL project Extra Packages Enterprise Linux (EPEL). RPMs also compatible distributions derived CentOS/RHEL. use EPEL repository, sufficient download install appropriate epel-release RPM. R can installed described Fedora section. CentOS Stream 9 Rocky Linux 9, AlmaLinux 9, RHEL 9 CentOS Stream 8 Rocky Linux 8, AlmaLinux 8, RHEL 8 CentOS 7 RHEL 7","code":"sudo dnf config-manager --set-enabled crb sudo dnf install epel-release epel-next-release -y sudo dnf config-manager --set-enabled crb sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm -y sudo dnf config-manager --set-enabled powertools sudo dnf install epel-release epel-next-release -y sudo dnf config-manager --set-enabled powertools sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y sudo yum-config-manager --enable extras sudo yum install dnf -y sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y  # Use puias computational repo curl -o /tmp/RPM-GPG-KEY-springdale http://springdale.math.ias.edu/data/puias/7/x86_64/os/RPM-GPG-KEY-springdale sudo mv /tmp/RPM-GPG-KEY-springdale /etc/pki/rpm-gpg/RPM-GPG-KEY-springdale  tee > /tmp/puias_computational.repo << EOF [puias_computational] name=PUIAS computational Base $releasever - $basearch mirrorlist=http://puias.math.ias.edu/data/puias/computational/$releasever/$basearch/mirrorlist # baseurl=http://puias.math.ias.edu/data/puias/computational/$releasever/$basearch enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-puias EOF sudo mv /tmp/puias_computational.repo /etc/yum.repos.d  sudo dnf update -y"},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"fedora","dir":"Articles","previous_headings":"Setting up environment","what":"Fedora","title":"Training the model","text":"","code":"sudo dnf install R @development-tools automake libxml2-devel libcurl-devel fontconfig-devel openssl-devel harfbuzz-devel fribidi-devel libgit2-devel freetype-devel libpng-devel libtiff-devel libjpeg-devel python3-pip ghostscript pandoc R-flexiblas flexiblas-*"},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"debian-based-system-and-ubuntu","dir":"Articles","previous_headings":"Setting up environment","what":"Debian-based system and Ubuntu","title":"Training the model","text":"","code":"sudo apt install r-base-dev build-essential make automake curl openssl libxml2-dev libcurl4-openssl-dev libfontconfig1-dev libssl-dev libharfbuzz-dev libfribidi-dev libgit2-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev python3-pip ghostscript pandoc libopenblas-dev libopenblas-openmp-dev"},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"python-3","dir":"Articles","previous_headings":"Setting up environment","what":"Python 3","title":"Training the model","text":"R package relies several Python packages. Users can install packages using one following methods: System package manager Linux Python pip Anaconda / Miniconda","code":"# On Fedora, you can run: sudo dnf install python3-numpy python3-sklearn python3-scipy python3-seaborn python3-tqdm python3-beautifulsoup4 python3-selenium python3-lxml   # On Debian, you can run: sudo apt install python3-numpy python3-sklearn-pandas python3-scipy python3-seaborn python3-tqdm python3-bs4 python3-selenium python3-lxml pip3 install numpy scikit-learn scipy seaborn tqdm beautifulsoup4 selenium lxml conda create -n labyrinth numpy scikit-learn scipy seaborn tqdm beautifulsoup4 selenium lxml r-tidyverse r-devtools r-rcppeigen r-rcppprogress r-fastmatch r-rpca r-future.apply r-pbapply r-dbi r-rsqlite r-bursts r-patchwork r-furrr r-datapreparation r-tokenizers r-reticulate r-knitr r-progressr r-future.callr r-hrbrthemes r-proc r-ggthemes r-meta r-ggally r-matrixtests r-corrplot r-statix bioconductor-tcgabiolinks bioconductor-clusterprofiler bioconductor-fgsea bioconductor-deseq2 bioconductor-m3c -c bioconda -c conda-forge conda activate labyrinth Rscript -e \"devtools::install_version('dbparser', version = '1.2.0')\" Rscript -e \"remotes::install_github('randef1ned/word2vec')\""},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"r","dir":"Articles","previous_headings":"Setting up environment","what":"R","title":"Training the model","text":"project uses custom fork diffusr package, maintained @randef1ned. fork optimizes computational execution package, providing improved performance compared original version. View documentation online.","code":"install.packages(c('tidyverse', 'devtools', 'igraph', 'future.apply', 'pbapply', 'DBI', 'RSQLite', 'bursts', 'patchwork', 'furrr', 'M3C', 'dataPreparation', 'tokenizers', 'reticulate', 'magrittr', 'knitr', 'progressr', 'future.callr', 'hrbrthemes', 'pROC', 'ggthemes', 'meta', 'GGally', 'matrixTests', 'rstatix', 'corrplot', 'BiocManager')) devtools::install_version('dbparser', version = '1.2.0') remotes::install_github('randef1ned/word2vec') remotes::install_github('randef1ned/diffusr')"},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"folder-structure","dir":"Articles","previous_headings":"","what":"Folder structure","title":"Training the model","text":"tools/ folder GitHub repository contains code scripts required pre-processing processing steps labyrinth.","code":""},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"preprocessing-steps","dir":"Articles","previous_headings":"Folder structure","what":"Preprocessing steps","title":"Training the model","text":"Parse drug names: extract_names.Rmd: R Markdown file used parsing extracting names data. Download read data: parse_wos.py: Python script reads parses Web Science (WoS) data. export_edge_tsv.py: Python script exports edge data TSV (tab-separated values) file. download_mesh_synonyms.py: Python script downloads processes MeSH (Medical Subject Headings) synonyms. clinical_trials_parser.py: Python script parses clinical trials data. clean_wos.py: Python script cleans preprocesses WoS data. Identify stopwords run word2vec: identify_stopwords.Rmd: R Markdown file used identify handle stopwords data. run_word2vec.R: R script runs word2vec algorithm tokenized data. compute_distance.R: R script computes distances word2vec embeddings drug. Construct large knowledge network: build_network.R: R script builds large network linking clinical trials IDs paper IDs. Extract stages drugs: drug_status.R: R script extracts stages drugs data.","code":""},{"path":"https://labyrinth.yinchun.su/articles/training.html","id":"construct-the-model-of-labyrinth-and-validate","dir":"Articles","previous_headings":"Folder structure","what":"Construct the model of labyrinth and validate","title":"Training the model","text":"Construct main knowledge network: main_network.R: R script constructs main network project. Compute details citation network: citation_metric.R: R script computes various metrics details citation network. Download MeSH structures validation: download_mesh_structure.py: Python script downloads MeSH structure data validation purposes. Download TCGA process data validation: download_tcga.R: R script downloads processes TCGA (Cancer Genome Atlas) data validation.","code":""},{"path":[]},{"path":"https://labyrinth.yinchun.su/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Junwei Han. Author, maintainer, contributor. Yinchun Su. Author.","code":""},{"path":"https://labyrinth.yinchun.su/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Han J, Su Y (2024). labyrinth: Labyrinth: Simulation Knowledge Networks. R package version 0.3.0, https://github.com/randef1ned/labyrinth.","code":"@Manual{,   title = {labyrinth: Labyrinth: A Simulation of Knowledge Networks},   author = {Junwei Han and Yinchun Su},   year = {2024},   note = {R package version 0.3.0},   url = {https://github.com/randef1ned/labyrinth}, }"},{"path":"https://labyrinth.yinchun.su/index.html","id":"labyrinth","dir":"","previous_headings":"","what":"Labyrinth: A Simulation of Knowledge Networks","title":"Labyrinth: A Simulation of Knowledge Networks","text":"Labyrinth human-inspired computational framework personalized drug prioritization.","code":""},{"path":"https://labyrinth.yinchun.su/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Labyrinth: A Simulation of Knowledge Networks","text":"labyrinth computational framework designed drug prioritization population individual levels. integrates multiple sources prior medical knowledge, including: Clinical trial information. Co-occurrence networks literature citations. Drug-target interactions. Drug-indication importance. Disease-drug distance. labyrinth emphasizes importance aligning computational models intuitive human reasoning. Thus, employs human-like knowledge retrieval methodology identify potential drug candidates various diseases. labyrinth aims strike balance predictive accuracy model interpretability, demonstrated robust performance across diverse diseases, evaluated using ROC-AUC metrics.","code":""},{"path":"https://labyrinth.yinchun.su/index.html","id":"a-notice-on-operating-system-compatibility","dir":"","previous_headings":"","what":"A notice on operating system compatibility","title":"Labyrinth: A Simulation of Knowledge Networks","text":"developed tested labyrinth Fedora Linux version 38 39. package contain operating system-specific code, tested operating systems. theory, labyrinth work Unix-like operating systems long required dependencies installed. recommended dependencies installed: R (≥ 4.3.0): developed R package using R version 4.3.x. Python: Python required drawing plots demos. recommended Python seaborn installed, reticulate package use system’s Python installation. OpenMP: package uses OpenMP parallelization multithreading OpenMP exists. OpenMP installed can significantly improve performance. Intel oneAPI Math Kernel Library (oneMKL): library can enhance mathematical performance, especially Intel processors. oneMKL required highly recommended. takes less ten minutes install package. encounter issues running package operating system, please open issue.","code":""},{"path":"https://labyrinth.yinchun.su/index.html","id":"before-installation","dir":"","previous_headings":"","what":"Before installation","title":"Labyrinth: A Simulation of Knowledge Networks","text":"installation, recommended install Intel oneAPI Math Kernel Library (oneMKL) optimize computational performance linear algebra. Windows users can download oneMKL Intel’s website install default directory. default directory : C:\\Program Files (x86)\\Intel\\oneAPI. Debian Ubuntu users can download oneMKL using apt non-free repo: using Intel repo: Fedora users can download oneMKL using dnf:","code":"# Install oneMKL version 2020.4.304-4 sudo apt install intel-mkl-full # Set up the repository and signed the entry wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \\ | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null echo \"deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main\" | sudo tee /etc/apt/sources.list.d/oneAPI.list # Update the package list sudo apt update # Install the latest oneMKL (version 2024.1) sudo apt install intel-oneapi-mkl # Create dnf repository file tee > /tmp/oneAPI.repo << EOF [oneAPI] name=Intel® oneAPI repository baseurl=https://yum.repos.intel.com/oneapi enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB EOF sudo mv /tmp/oneAPI.repo /etc/yum.repos.d # Install the latest oneMKL (version 2024.0) sudo dnf install intel-oneapi-mkl"},{"path":"https://labyrinth.yinchun.su/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Labyrinth: A Simulation of Knowledge Networks","text":"Install labyrinth using: can download pre-built binary packages Releases.","code":"install.packages(c('devtools', 'BiocManager')) remotes::install_github(\"randef1ned/labyrinth\")"},{"path":"https://labyrinth.yinchun.su/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Labyrinth: A Simulation of Knowledge Networks","text":"Load package using library(labyrinth). provide vignette package can called using: vignette(\"labyrinth\"). Alternatively, can view online version GitHub, pkgdown documentation. examples provided take several minutes run normal desktop computer. Basically know. documentation contains information contents necessary information training model used project. tools/ folder contains code scripts required constructing model, can understand technical details. Besides, can refer documentation background inspirations behind overall workflow `labyrinth.","code":""},{"path":"https://labyrinth.yinchun.su/index.html","id":"changelog","dir":"","previous_headings":"","what":"Changelog","title":"Labyrinth: A Simulation of Knowledge Networks","text":"Changelog: see ","code":""},{"path":"https://labyrinth.yinchun.su/reference/activation_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the next-time ACT activation rate — activation_rate","title":"Calculate the next-time ACT activation rate — activation_rate","text":"function calculates activation rate node graph based connectivity nodes, *relative strength* connections, global loose factor. ACT spreading activation formula represented Equation 1:   $$(y) = \\sum_x {f(x,y) \\cdot (x)} + c(y)$$,  c(y) represents baseline activation y.   \\(\\alpha\\) represents proximity node network.   \\(t\\) represents iteration number","code":""},{"path":"https://labyrinth.yinchun.su/reference/activation_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the next-time ACT activation rate — activation_rate","text":"","code":"activation_rate(   graph,   strength,   stm,   loose = 1,   threads = 0,   remove_first = FALSE,   display_progress = TRUE )"},{"path":"https://labyrinth.yinchun.su/reference/activation_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the next-time ACT activation rate — activation_rate","text":"graph square matrix (dgCMatrix representing background graph. Inside adjacency matrix, row column matrix represents node graph. values matrix either 0 1 (either 0 larger 0), value 0 indicates relations two nodes. diagonal matrix 0, self-edges graph. strength vector containing *relative strength* connections node graph, last time activation rates nodes. sequence matrix. stm binary vector indicating whether node activated, short-term memory loose scalar numeric 0 1 determines loose (weight) calculation process. threads scalar numeric indicating parallel threads. Default 0 (auto-detected). remove_first logical value indicating whether exclude first node calculation. display_progress logical value indicating whether show progress.","code":""},{"path":"https://labyrinth.yinchun.su/reference/activation_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the next-time ACT activation rate — activation_rate","text":"vector containing activation rate node graph","code":""},{"path":"https://labyrinth.yinchun.su/reference/activation_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the next-time ACT activation rate — activation_rate","text":"","code":"library(magrittr) #>  #> Attaching package: 'magrittr' #> The following objects are masked from 'package:testthat': #>  #>     equals, is_less_than, not  graph <- matrix(nrow = 7, ncol=7, data=c(   0, 0, 0, 0, 0, 0, 0,   1, 0, 0, 0, 0, 0, 0,   1, 0, 0, 0, 0, 0, 0,   0, 1, 0, 0, 0, 0, 0,   0, 1, 1, 0, 0, 0, 0,   0, 0, 1, 0, 0, 0, 0,   0, 0, 0, 1, 1, 1, 0)) diag(graph) <- 0 colnames(graph) <- rownames(graph) <- seq_len(nrow(graph)) %>%   subtract(1) %>% as.character()  initial_info <- data.frame(node = colnames(graph),                            strength = c(2, 4, 3, 2, 2, 1, 5),                            in_stm = c(rep(1, 3), rep(0, 4)))  activation_rate(graph, initial_info$strength, initial_info$in_stm,   loose = 0.8, remove_first = TRUE) #> Number of threads: 4, max threads: 4.  #> Solving activation patterns... #> [1] 7.485100 5.012514 4.741765 6.746771 2.210533 5.461641"},{"path":"https://labyrinth.yinchun.su/reference/alias2SymbolUsingNCBI.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gene Aliases to Official Gene Symbols — alias2SymbolUsingNCBI","title":"Convert Gene Aliases to Official Gene Symbols — alias2SymbolUsingNCBI","text":"Maps gene alias names official gene symbols.","code":""},{"path":"https://labyrinth.yinchun.su/reference/alias2SymbolUsingNCBI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gene Aliases to Official Gene Symbols — alias2SymbolUsingNCBI","text":"","code":"alias2SymbolUsingNCBI(   alias,   gene.info.file,   required.columns = c(\"GeneID\", \"Symbol\", \"description\") )"},{"path":"https://labyrinth.yinchun.su/reference/alias2SymbolUsingNCBI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gene Aliases to Official Gene Symbols — alias2SymbolUsingNCBI","text":"alias character vector gene aliases gene.info.file name gene information file downloaded NCBI. required.columns character vector columns gene information file required output.","code":""},{"path":"https://labyrinth.yinchun.su/reference/alias2SymbolUsingNCBI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gene Aliases to Official Gene Symbols — alias2SymbolUsingNCBI","text":"data frame latest gene symbols","code":""},{"path":[]},{"path":"https://labyrinth.yinchun.su/reference/alias2SymbolUsingNCBI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gene Aliases to Official Gene Symbols — alias2SymbolUsingNCBI","text":"","code":"library(labyrinth) update_gene_symbol('IL-6') #> [1] \"IL6\""},{"path":"https://labyrinth.yinchun.su/reference/assert_dgCMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the sparse matrix valid — assert_dgCMatrix","title":"Check if the sparse matrix valid — assert_dgCMatrix","text":"Check sparse matrix valid","code":""},{"path":"https://labyrinth.yinchun.su/reference/assert_dgCMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the sparse matrix valid — assert_dgCMatrix","text":"","code":"assert_dgCMatrix(adj_matrix)"},{"path":"https://labyrinth.yinchun.su/reference/assert_dgCMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the sparse matrix valid — assert_dgCMatrix","text":"adj_matrix sparse matrix check","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Disease MeSH identifiers — disease_ids","title":"Disease MeSH identifiers — disease_ids","text":"character vector containing Medical Subject Headings (MeSH) identifiers   human diseases.","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disease MeSH identifiers — disease_ids","text":"","code":"disease_ids"},{"path":"https://labyrinth.yinchun.su/reference/disease_ids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Disease MeSH identifiers — disease_ids","text":"character vector.","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_ids.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Disease MeSH identifiers — disease_ids","text":"disease MeSH identifiers obtained National Library   Medicine's Medical Subject Headings (MeSH) database   (https://www.nlm.nih.gov/mesh/).","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disease MeSH identifiers — disease_ids","text":"`disease_ids` object character vector contains MeSH identifiers   (MeSH IDs) various diseases. element vector represents   unique MeSH identifier, can used identify reference   specific diseases MeSH taxonomy. MeSH identifiers hierarchically organized provide standardized way   representing categorizing diseases medical concepts.","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disease MeSH identifiers — disease_ids","text":"","code":"library(labyrinth)  data(disease_ids, package = \"labyrinth\")  length(disease_ids) #> [1] 1098  # Check if a specific MeSH identifier is present \"D000544\" %in% disease_ids  # Alzheimer's disease #> [1] TRUE"},{"path":"https://labyrinth.yinchun.su/reference/disease_impact_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease impact score — disease_impact_score","title":"Get disease impact score — disease_impact_score","text":"Get disease impact score","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_impact_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease impact score — disease_impact_score","text":"","code":"disease_impact_score(expr, control, max.iter = 10000)"},{"path":"https://labyrinth.yinchun.su/reference/disease_impact_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease impact score — disease_impact_score","text":"expr expression matrix control vector scalar index normal samples. max.iter Maximal number iterations augumented Lagrange multiplier algorithm, used robust PCA algorithm.","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_impact_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease impact score — disease_impact_score","text":"vector disease impact score","code":""},{"path":"https://labyrinth.yinchun.su/reference/disease_impact_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease impact score — disease_impact_score","text":"","code":"# no examples # TODO: fill the examples"},{"path":"https://labyrinth.yinchun.su/reference/drug_annot.html","id":null,"dir":"Reference","previous_headings":"","what":"Drug annotation dataset — drug_annot","title":"Drug annotation dataset — drug_annot","text":"data.table containing drug identifiers corresponding names.","code":""},{"path":"https://labyrinth.yinchun.su/reference/drug_annot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drug annotation dataset — drug_annot","text":"","code":"drug_annot"},{"path":"https://labyrinth.yinchun.su/reference/drug_annot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Drug annotation dataset — drug_annot","text":"data.table following columns: drug_id character vector representing drug identifier. drug_name character vector representing name drug.","code":""},{"path":"https://labyrinth.yinchun.su/reference/drug_annot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Drug annotation dataset — drug_annot","text":"drug annotations obtained ChEMBL, DrugBank, CTD.","code":""},{"path":"https://labyrinth.yinchun.su/reference/drug_annot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drug annotation dataset — drug_annot","text":"`drug_annot` data set provides mapping drug identifiers   corresponding names. row represents unique drug identifier   (`drug_id`) associated name (`drug_name`). drug identifiers names data set sourced ChEMBL,   DrugBank, CTD extract synonyms drug.","code":""},{"path":"https://labyrinth.yinchun.su/reference/drug_annot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drug annotation dataset — drug_annot","text":"","code":"library(labyrinth)  data(drug_annot, package = \"labyrinth\")  # Access drug names for specific identifiers drug_annot[drug_annot$drug_id == \"2838\", ]$drug_name  # Imatinib #>  [1] \"ALPHA-(4-METHYL-1-PIPERAZINYL)-3'-((4-(3-PYRIDYL)-2-PYRIMIDINYL)AMINO)-P-TOLU-P-TOLUIDIDE\" #>  [2] \"CELONIB\"                                                                                   #>  [3] \"CGP 57148\"                                                                                 #>  [4] \"CGP-57148\"                                                                                 #>  [5] \"CGP57148\"                                                                                  #>  [6] \"CGP57148B\"                                                                                 #>  [7] \"D01441\"                                                                                    #>  [8] \"ENLIVEN\"                                                                                   #>  [9] \"GLAMOX\"                                                                                    #> [10] \"GLEEVEC\"                                                                                   #> [11] \"GLIVEC\"                                                                                    #> [12] \"IMATIB\"                                                                                    #> [13] \"IMATINIB\"                                                                                  #> [14] \"IMATINIB MESILATE\"                                                                         #> [15] \"IMATINIB MESYLATE\"                                                                         #> [16] \"IMATINIB METHANESULFONATE\"                                                                 #> [17] \"MESYLATE, IMATINIB\"                                                                        #> [18] \"MESYLONIB\"                                                                                 #> [19] \"METHANESULFONATE, IMATINIB\"                                                                #> [20] \"MITINAB\"                                                                                   #> [21] \"NSC-716051\"                                                                                #> [22] \"PLIVATINIB\"                                                                                #> [23] \"QTI-571\"                                                                                   #> [24] \"QTI571\"                                                                                    #> [25] \"SHANTINIB\"                                                                                 #> [26] \"ST 1571\"                                                                                   #> [27] \"ST1571\"                                                                                    #> [28] \"STI 571\"                                                                                   #> [29] \"STI-571\"                                                                                   #> [30] \"STI571\"                                                                                    #> [31] \"CHEMBL1642\"                                                                                #> [32] \"CHEMBL941\"                                                                                 #> [33] \"DB00619\"                                                                                    # Count the number of unique drugs length(unique(drug_annot$drug_id)) #> [1] 16716  # Visualize the data drug_id <- drug_annot$drug_id hist(table(drug_id))"},{"path":"https://labyrinth.yinchun.su/reference/gene_disease.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene-disease associations — gene_disease","title":"Gene-disease associations — gene_disease","text":"list containing gene-disease associations obtained DisGeNET   confidence level 60","code":""},{"path":"https://labyrinth.yinchun.su/reference/gene_disease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene-disease associations — gene_disease","text":"","code":"gene_disease"},{"path":"https://labyrinth.yinchun.su/reference/gene_disease.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene-disease associations — gene_disease","text":"named list, element   character vector representing genes associated specific MeSH   disease identifier (MeSH ID). names list elements correspond   MeSH IDs.","code":""},{"path":"https://labyrinth.yinchun.su/reference/gene_disease.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene-disease associations — gene_disease","text":"gene-disease associations obtained DisGeNET database   (https://www.disgenet.org/), integrates information various   sources provide gene-disease associations.","code":""},{"path":"https://labyrinth.yinchun.su/reference/gene_disease.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene-disease associations — gene_disease","text":"`gene_disease` data set contains gene-disease associations extracted   DisGeNET database confidence level 60   list represents MeSH disease identifier, corresponding   character vector contains gene identifiers associated   disease.","code":""},{"path":"https://labyrinth.yinchun.su/reference/gene_disease.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene-disease associations — gene_disease","text":"","code":"library(labyrinth)  data(gene_disease, package = \"labyrinth\")  # Preview the data gene_disease[[\"D000168\"]] #> [1] \"TWIST1\" \"FGFR2\"  \"FGFR1\"   # Visualize the pattern # \\donttest{ disease_gene_count <- purrr::map_int(gene_disease, ~length(.x)) hist(disease_gene_count)  # }"},{"path":"https://labyrinth.yinchun.su/reference/get_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","title":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","text":"returns neighboring nodes specified node graph. neighboring nodes can returned various formats, depending `return_type` parameter.","code":""},{"path":"https://labyrinth.yinchun.su/reference/get_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","text":"","code":"get_neighbors(   adj_matrix,   node_id,   neighbor_type = c(\"both\", \"forward\", \"backward\"),   return_type = c(\"binary\", \"name\", \"id\") )"},{"path":"https://labyrinth.yinchun.su/reference/get_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","text":"adj_matrix square matrix (dgCMatrix representing background graph. Inside adjacency matrix, row column matrix represents node graph. values matrix either 0 1 (either 0 larger 0), value 0 indicates relations two nodes. diagonal matrix 0, self-edges graph. node_id ID node whose neighbors retrieved. Node name also acceptable. neighbor_type `neighbor_type` parameter specifies type neighbors include output: - ****: return neighbors specific node, regarding graph   undirected. - **forward**: return neighbors reachable   specified node, specifically means downstream neighbors directed   networks. - **backward**: return upstream neighbors specific nodes.   Specifically, reverse direction edges graph   return downstream neighbors. return_type `return_type` paramater specifies type return: - **binary**: return binary vector length equal total number   nodes graph. elements vector set 1 nodes   neighbors specific nodes, 0 nodes. - **name**: return character vector containing names neighbor   nodes. - **id**: return integer vector containing IDs neighbor nodes.","code":""},{"path":"https://labyrinth.yinchun.su/reference/get_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","text":"vector based `return_type`.","code":""},{"path":"https://labyrinth.yinchun.su/reference/get_neighbors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","text":"https://www.ibm.com/docs/en/cognos-analytics/11.1.0? topic=terms-modified-z-score","code":""},{"path":[]},{"path":"https://labyrinth.yinchun.su/reference/get_neighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get neighboring nodes in a graph (adjacency matrix) — get_neighbors","text":"","code":"# make an adjacency matrix and randomly fill some cells with 1s mat <- matrix(sample(c(0,1), 100, replace = TRUE), 10, 10) diag(mat) <- 0 # remove self-loops  library(labyrinth) # Get neighbors get_neighbors(mat, 2) #>  [1] 1 0 0 0 0 1 0 1 1 1"},{"path":"https://labyrinth.yinchun.su/reference/gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute gradient of Spreadgram — gradient","title":"Compute gradient of Spreadgram — gradient","text":"function calculates gradient computed activation rates   given background graph. gradient computed based Sigmoid   function log likelihood, iteratively computes error   permutation. function requires background graph computed activation rates   input.","code":""},{"path":"https://labyrinth.yinchun.su/reference/gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute gradient of Spreadgram — gradient","text":"","code":"gradient(graph, activation, threads = 0, verbose = TRUE)"},{"path":"https://labyrinth.yinchun.su/reference/gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute gradient of Spreadgram — gradient","text":"graph square matrix (dgCMatrix representing background graph. Inside adjacency matrix, row column matrix represents node graph. values matrix either 0 1 (either 0 larger 0), value 0 indicates relations two nodes. diagonal matrix 0, self-edges graph. activation numeric vector representing computed activation rates node graph. length vector equal number nodes graph. vector contain activation rate node. threads scalar numeric indicating parallel threads. Default 0 (auto-detected). verbose Show verbose message","code":""},{"path":"https://labyrinth.yinchun.su/reference/gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute gradient of Spreadgram — gradient","text":"scalar representing gradient computed activation rates.   gradient represents rate change activation rate.","code":""},{"path":"https://labyrinth.yinchun.su/reference/gradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute gradient of Spreadgram — gradient","text":"","code":"# The graph G data(\"graph\", package = \"labyrinth\")  # The initial info last_activation = c(2, 4, 3, 2, 2, 1, 5)  gradient(graph, last_activation) #> [1] 0.03732267"},{"path":"https://labyrinth.yinchun.su/reference/graph.html","id":null,"dir":"Reference","previous_headings":"","what":"A small example implemented from Anderson (1983) — graph","title":"A small example implemented from Anderson (1983) — graph","text":"small example implemented Anderson (1983)","code":""},{"path":"https://labyrinth.yinchun.su/reference/graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A small example implemented from Anderson (1983) — graph","text":"","code":"graph"},{"path":"https://labyrinth.yinchun.su/reference/graph.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A small example implemented from Anderson (1983) — graph","text":"Adjacency dgCMatrix   representing unweighted directed graph. Inside adjacency matrix,   row column matrix represents node graph.   7 nodes 9 edges, self-loops inside graph.","code":""},{"path":"https://labyrinth.yinchun.su/reference/graph.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A small example implemented from Anderson (1983) — graph","text":"Anderson, J. R. (1983). spreading activation theory memory. *Journal verbal learning verbal behavior*, *22*(3), 261-295. https://doi.org/10.1016/S0022-5371(83)90201-3.","code":""},{"path":"https://labyrinth.yinchun.su/reference/graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A small example implemented from Anderson (1983) — graph","text":"","code":"library(labyrinth)  data(\"graph\", package = \"labyrinth\")  dim(graph) #> [1] 7 7  # Draw the network plots using igraph # \\donttest{ library(igraph) #>  #> Attaching package: 'igraph' #> The following object is masked from 'package:labyrinth': #>  #>     random_walk #> The following object is masked from 'package:testthat': #>  #>     compare #> The following objects are masked from 'package:stats': #>  #>     decompose, spectrum #> The following object is masked from 'package:base': #>  #>     union graph <- graph_from_adjacency_matrix(as.matrix(graph)) plot(graph)  # }"},{"path":"https://labyrinth.yinchun.su/reference/is.dgCMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a matrix is `dgCMatrix` class — is.dgCMatrix","title":"Check if a matrix is `dgCMatrix` class — is.dgCMatrix","text":"Check matrix `dgCMatrix` class","code":""},{"path":"https://labyrinth.yinchun.su/reference/is.dgCMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a matrix is `dgCMatrix` class — is.dgCMatrix","text":"","code":"is.dgCMatrix(mat)"},{"path":"https://labyrinth.yinchun.su/reference/is.dgCMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a matrix is `dgCMatrix` class — is.dgCMatrix","text":"mat matrix check","code":""},{"path":"https://labyrinth.yinchun.su/reference/is.dgCMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a matrix is `dgCMatrix` class — is.dgCMatrix","text":"boolean variable","code":""},{"path":"https://labyrinth.yinchun.su/reference/labyrinth-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Labyrinth: A Simulation of Knowledge Networks — labyrinth-package","title":"Labyrinth: A Simulation of Knowledge Networks — labyrinth-package","text":"One paragraph description package   one full sentences. can use Config/testthat/parallel   true boost test efficiency.","code":""},{"path":"https://labyrinth.yinchun.su/reference/labyrinth-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Labyrinth: A Simulation of Knowledge Networks — labyrinth-package","text":"labyrinth","code":""},{"path":"https://labyrinth.yinchun.su/reference/labyrinth-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labyrinth: A Simulation of Knowledge Networks — labyrinth-package","text":"","code":"# if (!\"devtools\" %in% as.data.frame(installed.packages())$Package) #   install.packages(\"devtools\") # devtools::install_github(\"randef1ned/labyrinth\")"},{"path":"https://labyrinth.yinchun.su/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load External Data — load_data","title":"Load External Data — load_data","text":"function loads external data R environment. required   file found locally, attempts download file author's   GitHub. package, used download external data     folder, pre-trained model file, drug annotation file, etc.","code":""},{"path":"https://labyrinth.yinchun.su/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load External Data — load_data","text":"","code":"load_data(required_file)"},{"path":"https://labyrinth.yinchun.su/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load External Data — load_data","text":"required_file Required file name without extensions GitHub repo.","code":""},{"path":"https://labyrinth.yinchun.su/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load External Data — load_data","text":"content required data.","code":""},{"path":"https://labyrinth.yinchun.su/reference/load_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load External Data — load_data","text":"function first checks required file exists labyrinth   directory (defined tools::R_user_dir('labyrinth')).   required file found, attempts download file GitHub   repo five times. download fails five attempts, error   thrown. file successfully downloaded already exists   locally, function return file content.","code":""},{"path":"https://labyrinth.yinchun.su/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load External Data — load_data","text":"","code":"if (FALSE) { # Load the trained model model <- load_data(\"model\")  # Load the drug annotation data drug_annot <- load_data(\"drug_annot\") }"},{"path":"https://labyrinth.yinchun.su/reference/mesh_annot.html","id":null,"dir":"Reference","previous_headings":"","what":"MeSH annotation data — mesh_annot","title":"MeSH annotation data — mesh_annot","text":"data frame containing annotated Medical Subject Headings (MeSH) terms   associated group information.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_annot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MeSH annotation data — mesh_annot","text":"","code":"mesh_annot"},{"path":"https://labyrinth.yinchun.su/reference/mesh_annot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MeSH annotation data — mesh_annot","text":"data.table following   columns: mesh_id character vector representing MeSH identifier. mesh_term character vector representing MeSH term. group_id character vector representing group identifier   obtained NCBI. group_name character vector representing group name obtained   NCBI.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_annot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MeSH annotation data — mesh_annot","text":"MeSH terms obtained National Library Medicine's Medical   Subject Headings (MeSH) database (https://www.nlm.nih.gov/mesh/),   group information obtained National Center Biotechnology   Information (NCBI).","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_annot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MeSH annotation data — mesh_annot","text":"","code":"library(labyrinth)  data(mesh_annot, package = \"labyrinth\")  # Preview the data head(mesh_annot) #>   mesh_id        mesh_term group_id group_name #> 1 D002051 burkitt lymphoma        1 Infections #> 2 D007918          leprosy        1 Infections #> 3 D008288          malaria        1 Infections #> 4 D011014        pneumonia        1 Infections #> 5 D012220         rhinitis        1 Infections #> 6 D012772    shock, septic        1 Infections"},{"path":"https://labyrinth.yinchun.su/reference/mesh_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"MeSH hierarchy network — mesh_hierarchy","title":"MeSH hierarchy network — mesh_hierarchy","text":"edgelist network representing hierarchical structure Medical   Subject Headings (MeSH) terms.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MeSH hierarchy network — mesh_hierarchy","text":"","code":"mesh_hierarchy"},{"path":"https://labyrinth.yinchun.su/reference/mesh_hierarchy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MeSH hierarchy network — mesh_hierarchy","text":"data.table following columns: from_id character vector representing MeSH identifier   parent term. to_id character vector representing MeSH identifier   child term.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_hierarchy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MeSH hierarchy network — mesh_hierarchy","text":"MeSH hierarchy data obtained National Library Medicine's   Medical Subject Headings (MeSH) database (https://www.nlm.nih.gov/mesh/).","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_hierarchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MeSH hierarchy network — mesh_hierarchy","text":"`mesh_hierarchy` data frame edgelist network, row   represents directed edge parent MeSH term (`from_id`) child   MeSH term (`to_id`). structure captures hierarchical relationships   MeSH terms.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MeSH hierarchy network — mesh_hierarchy","text":"","code":"library(labyrinth)  data(mesh_hierarchy, package = \"labyrinth\")  # Preview the data head(mesh_hierarchy) #>    from_id   to_id #>     <char>  <char> #> 1: D001829 D059925 #> 2: D001829 D001940 #> 3: D001940 D042361 #> 4: D001940 D009558 #> 5: D001829 D005121 #> 6: D005121 D000672  # Draw the network plots using igraph # \\donttest{ library(igraph) mesh_network <- graph_from_edgelist(as.matrix(mesh_hierarchy)) plot(mesh_network)  # }"},{"path":"https://labyrinth.yinchun.su/reference/mesh_synonyms.html","id":null,"dir":"Reference","previous_headings":"","what":"MeSH synonyms — mesh_synonyms","title":"MeSH synonyms — mesh_synonyms","text":"data frame containing Medical Subject Headings (MeSH) identifiers   associated synonyms.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_synonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MeSH synonyms — mesh_synonyms","text":"","code":"mesh_synonyms"},{"path":"https://labyrinth.yinchun.su/reference/mesh_synonyms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MeSH synonyms — mesh_synonyms","text":"data.table following columns: mesh_id character vector representing MeSH identifier. mesh_synonyms character vector representing synonyms   associated MeSH identifier.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_synonyms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MeSH synonyms — mesh_synonyms","text":"MeSH IDs obtained National Library Medicine's Medical   Subject Headings (MeSH) database (https://www.nlm.nih.gov/mesh/).   synonyms obtained Cochrane Library   (https://www.cochranelibrary.com/advanced-search/mesh).","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_synonyms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MeSH synonyms — mesh_synonyms","text":"`mesh_synonyms` data frame provides mapping MeSH identifiers   corresponding synonyms. row represents MeSH identifier   (`mesh_id`) associated synonyms (`mesh_synonyms`), can   used text mining, information retrieval, applications   involving MeSH terms.","code":""},{"path":"https://labyrinth.yinchun.su/reference/mesh_synonyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MeSH synonyms — mesh_synonyms","text":"","code":"library(labyrinth)  data(mesh_synonyms, package = \"labyrinth\") #> Warning: strings not representable in native encoding will be translated to UTF-8  # Preview the data head(mesh_synonyms) #>    mesh_id                             synonyms #>     <char>                               <char> #> 1: D045743                 scleroderma, diffuse #> 2: D045743          scleroses, diffuse systemic #> 3: D045743 diffuse cutaneous systemic sclerosis #> 4: D045743            sudden onset sclerodermas #> 5: D045743            scleroderma, sudden onset #> 6: D045743      systemic sclerosis, progressive"},{"path":"https://labyrinth.yinchun.su/reference/ncbi_info.html","id":null,"dir":"Reference","previous_headings":"","what":"NCBI Gene Information — ncbi_info","title":"NCBI Gene Information — ncbi_info","text":"data table containing meta information NCBI genes, including   type associated species.","code":""},{"path":"https://labyrinth.yinchun.su/reference/ncbi_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCBI Gene Information — ncbi_info","text":"","code":"ncbi_info"},{"path":"https://labyrinth.yinchun.su/reference/ncbi_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NCBI Gene Information — ncbi_info","text":"data.table following   columns: type character vector representing type species. species character vector representing species NCBI   supports online platform.","code":""},{"path":"https://labyrinth.yinchun.su/reference/ncbi_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NCBI Gene Information — ncbi_info","text":"data obtained National Center Biotechnology Information   (NCBI) Gene database (https://www.ncbi.nlm.nih.gov/gene).","code":""},{"path":"https://labyrinth.yinchun.su/reference/ncbi_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NCBI Gene Information — ncbi_info","text":"","code":"library(labyrinth)  data(\"ncbi_info\", package = \"labyrinth\")  # Preview the data head(ncbi_info) #>                type                                   species #>              <char>                                    <char> #> 1: Archaea_Bacteria                                   Archaea #> 2: Archaea_Bacteria                                  Bacteria #> 3: Archaea_Bacteria Escherichia_coli_str._K-12_substr._MG1655 #> 4: Archaea_Bacteria               Pseudomonas_aeruginosa_PAO1 #> 5:            Fungi                                Ascomycota #> 6:            Fungi                             Microsporidia"},{"path":"https://labyrinth.yinchun.su/reference/ppi.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein-protein interaction network — ppi","title":"Protein-protein interaction network — ppi","text":"sparse adjacency matrix representing protein-protein interaction network   compiled multiple databases.","code":""},{"path":"https://labyrinth.yinchun.su/reference/ppi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein-protein interaction network — ppi","text":"","code":"ppi"},{"path":"https://labyrinth.yinchun.su/reference/ppi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Protein-protein interaction network — ppi","text":"dgCMatrix object   Matrix package, value 1 indicates   connection (interaction) two genes, 0 indicates   connection. rows columns matrix correspond gene   identifiers, matrix square symmetric, representing   undirected adjacency network.","code":""},{"path":"https://labyrinth.yinchun.su/reference/ppi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Protein-protein interaction network — ppi","text":"protein-protein interaction data compiled following   databases: KEGG (https://www.genome.jp/kegg/) Reactome (https://reactome.org/) Biocarta (https://cgap.nci.nih.gov/Pathways/BioCarta_Pathways) NCI (https://cancer.gov/-nci) SPIKE (https://www.cbrc.kaust.edu.sa/spike/) HumanCyc (https://humancyc.org/) Panther (http://www.pantherdb.org/)","code":""},{"path":"https://labyrinth.yinchun.su/reference/ppi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Protein-protein interaction network — ppi","text":"`ppi` data set sparse adjacency matrix representing   protein-protein interaction network. network compiled seven   databases: KEGG, Reactome, Biocarta, NCI, SPIKE, HumanCyc, Panther. rows columns matrix correspond gene identifiers,   order genes consistent across rows columns. matrix   square symmetric, representing undirected network,   interaction gene gene B represented 1   (, B) (B, ) positions matrix.","code":""},{"path":"https://labyrinth.yinchun.su/reference/ppi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein-protein interaction network — ppi","text":"","code":"library(Matrix) data(ppi, package = \"labyrinth\")  # Access a specific element of the matrix dim(ppi) #> [1] 12836 12836 ppi[1, 2]  # Interaction between gene 1 and gene 2 #> [1] 0  # Convert to a dense matrix for visualization or analysis dense_ppi <- as.matrix(ppi) #> Warning: sparse->dense coercion: allocating vector of size 1.2 GiB"},{"path":"https://labyrinth.yinchun.su/reference/predict_drug.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict drug response scores based on disease weights — predict_drug","title":"Predict drug response scores based on disease weights — predict_drug","text":"function predict drug response scores based disease weights using   multiple methods. takes vector disease weights sparse matrix   representing drug-disease interaction model, calculates predicted   drug scores using one three methods: random walk restart (`rwr`),   original spreading activation (`sa`), Spread-gram (`sg`).","code":""},{"path":"https://labyrinth.yinchun.su/reference/predict_drug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict drug response scores based on disease weights — predict_drug","text":"","code":"predict_drug(   disease_weights,   model,   method = c(\"rwr\", \"wrwr\", \"sg\", \"sa\"),   restart_prob = 0.7,   threshold = 1e-06,   max_iter = 1e+06,   loose = 1,   print_weight_only = FALSE )"},{"path":"https://labyrinth.yinchun.su/reference/predict_drug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict drug response scores based on disease weights — predict_drug","text":"disease_weights named vector disease weights. names vector correspond disease IDs `disease_ids` dataset. model square matrix (dgCMatrix pre-trained model. method character string specifying prediction method use.   drug scores can predicted using one three methods: random   walk restart (either `rwr` `wrwr`), original spreading activation   (`sa`), Spread-gram (`sg`). `rwr` method provides quick   calculation estimating drug scores. criterion using   quick calculation met, falls back `wrwr` method. Default option `rwr`. restart_prob restart probability random walk restart method. Default 0.7. threshold convergence threshold iteration. Recommended value 1e-6 `rwr` 1 `sg`. max_iter maximum number iterations. Default value 1e6. loose loose parameter original spreading activation method. Default 1.0. print_weight_only logical value indicating whether print predicted drug weights. TRUE, one numeric vector drug weights returned. FALSE, data frame drug IDs, drug names, drug weights returned. Default value FALSE.","code":""},{"path":"https://labyrinth.yinchun.su/reference/predict_drug.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict drug response scores based on disease weights — predict_drug","text":"return value based `print_weight_only`. TRUE, one  numeric vector drug weights   returned. FALSE, data frame drug   IDs, drug names, drug weights returned.","code":""},{"path":[]},{"path":"https://labyrinth.yinchun.su/reference/predict_drug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict drug response scores based on disease weights — predict_drug","text":"","code":"# Load example data to the environment data(\"drug_annot\", package = \"labyrinth\") data(\"disease_ids\", package = \"labyrinth\")  # \\donttest{ # Load models to the environment model <- load_data(\"model\")  # Construct disease weights disease_weights <- sample(c(rep(0, 50), rep(1, 2)), 1098, replace = TRUE) names(disease_weights) <- disease_ids  # Predict drug scores based on disease weights drug_weights <- predict_drug(disease_weights, model, method = \"rwr\") #> normalizing column vectors! #> normalizing column vectors! #>  #> Attaching package: 'diffusr' #> The following objects are masked from 'package:labyrinth': #>  #>     assert_dgCMatrix, is.dgCMatrix # }"},{"path":"https://labyrinth.yinchun.su/reference/random_walk.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph diffusion using a Markov random walk — random_walk","title":"Graph diffusion using a Markov random walk — random_walk","text":"Markov Random Walk takes inital distribution \\(p_0\\) calculates stationary distribution . diffusion process regulated restart probability \\(r\\) controls often MRW jumps back initial values. source code brought diffusr v0.2.1.","code":""},{"path":"https://labyrinth.yinchun.su/reference/random_walk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph diffusion using a Markov random walk — random_walk","text":"","code":"random_walk(   p0,   graph,   r = 0.5,   niter = 10000,   thresh = 1e-04,   do.analytical = FALSE,   correct.for.hubs = FALSE,   allow.ergodic = FALSE,   return.pt.only = FALSE )"},{"path":"https://labyrinth.yinchun.su/reference/random_walk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph diffusion using a Markov random walk — random_walk","text":"p0 \\(n \\times p\\)-dimensional numeric non-negative vector/matrix representing starting distribution Markov chain (need sum one). graph \\(n \\times p\\)-dimensional numeric non-negative adjacence matrix (dgCMatrix) representing graph r scalar \\((0, 1)\\). restart probability Markov random walk restart desired niter maximal number iterations computation Markov chain. thresh reached, niter used stop criterion. thresh threshold breaking iterative computation stationary distribution. absolute difference distribution time point \\(t-1\\) \\(t\\) less thresh, algorithm stops. thresh reached niter, algorithm stops well. .analytical boolean stationary distribution shall computed solving analytical solution rather iteratively correct..hubs TRUE multiplies correction factor nodes, random walk gets biased nodes high degree. case original input matrix normalized : $$ P(j | ) = \\dfrac{1}{\\text{degree}()} \\times   \\min \\left(1, \\dfrac{\\text{degree}()}{\\text{degree}(j)}\\right)$$ Note consider edge weights. allow.ergodic Allow multiple components graph. return.pt.Return pt .","code":""},{"path":"https://labyrinth.yinchun.su/reference/random_walk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph diffusion using a Markov random walk — random_walk","text":"returns list following elements  p.inf  stationary distribution numeric vector transition.matrix column normalized transition matrix used         random walk","code":""},{"path":"https://labyrinth.yinchun.su/reference/random_walk.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Graph diffusion using a Markov random walk — random_walk","text":"Tong, H., Faloutsos, C., & Pan, J. Y. (2006), Fast random walk restart applications. Koehler, S., Bauer, S., Horn, D., & Robinson, P. N. (2008), Walking interactome prioritization candidate disease genes. American Journal Human Genetics","code":""},{"path":"https://labyrinth.yinchun.su/reference/random_walk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph diffusion using a Markov random walk — random_walk","text":"","code":"# count of nodes n <- 5 # starting distribution (has to sum to one) p0    <- as.vector(rmultinom(1, 1, prob = rep(.2, n))) # adjacency matrix (either normalized or not) graph <- matrix(abs(rnorm(n * n)), n, n)  # computation of stationary distribution pt    <- random_walk(p0, graph) #> Error in ensure_igraph(graph): Must provide a graph object (provided wrong object type).  # draw histogram of the `pt` vector hist(pt$p.inf) #> Error in pt$p.inf: object of type 'closure' is not subsettable"},{"path":"https://labyrinth.yinchun.su/reference/sigmoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Sigmoid function of Spreadgram — sigmoid","title":"Sigmoid function of Spreadgram — sigmoid","text":"Sigmoid function one basic function Spreadgram algorithm.   function calculates Sigmoid function specific node given   activation rates nodes neighbors.   equation writes   $$\\sigma (x,y) = {{\\exp [(x)(y)]} \\{1 + \\exp [(x)(y)]}}$$.","code":""},{"path":"https://labyrinth.yinchun.su/reference/sigmoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigmoid function of Spreadgram — sigmoid","text":"","code":"sigmoid(ax, ay, u = 1)"},{"path":"https://labyrinth.yinchun.su/reference/sigmoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigmoid function of Spreadgram — sigmoid","text":"ax vector activation rates x, set y's neighbors ay scalar activation rate node y. u \\(x \\N(y)\\) \\(u = 1\\), otherwise \\(u = 0\\).","code":""},{"path":"https://labyrinth.yinchun.su/reference/sigmoid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sigmoid function of Spreadgram — sigmoid","text":"vector sigma","code":""},{"path":"https://labyrinth.yinchun.su/reference/sigmoid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sigmoid function of Spreadgram — sigmoid","text":"","code":"sigmoid(1:4, 2) #> [1] 0.8807971 0.9820138 0.9975274 0.9996646"},{"path":"https://labyrinth.yinchun.su/reference/speech.html","id":null,"dir":"Reference","previous_headings":"","what":"A portion of the phonological network examined in Vitevitch (2008). — speech","title":"A portion of the phonological network examined in Vitevitch (2008). — speech","text":"Depicted word *speech*, phonological neighbors *speech*,   phonological neighbors neighbors. taken   spreadr package.","code":""},{"path":"https://labyrinth.yinchun.su/reference/speech.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A portion of the phonological network examined in Vitevitch (2008). — speech","text":"","code":"speech"},{"path":"https://labyrinth.yinchun.su/reference/speech.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A portion of the phonological network examined in Vitevitch (2008). — speech","text":"Adjacency dgCMatrix   representing unweighted directed graph. Inside adjacency matrix,   row column matrix represents node graph.   34 nodes 96 edges, self-loops inside graph.","code":""},{"path":"https://labyrinth.yinchun.su/reference/speech.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A portion of the phonological network examined in Vitevitch (2008). — speech","text":"Chan, K. Y., & Vitevitch, M. S. (2009). influence phonological   neighborhood clustering coefficient spoken word recognition. *Journal   experimental psychology: Human perception performance*, *35*(6),   1934–1949. https://doi.org/10.1037/a0016902. Siew C. S. Q. (2019). spreadr: R package simulate spreading activation   network. *Behavior research methods*, *51*(2), 910–929.   https://doi.org/10.3758/s13428-018-1186-5.","code":""},{"path":"https://labyrinth.yinchun.su/reference/speech.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A portion of the phonological network examined in Vitevitch (2008). — speech","text":"","code":"library(labyrinth)  data(\"speech\", package = \"labyrinth\")  dim(speech) #> [1] 34 34  # Draw the network plots using igraph # \\donttest{ library(igraph) speech_graph <- graph_from_adjacency_matrix(as.matrix(speech)) plot(speech_graph)  # }"},{"path":"https://labyrinth.yinchun.su/reference/spread_gram.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate spreading activation in a network (Main function) — spread_gram","title":"Simulate spreading activation in a network (Main function) — spread_gram","text":"ACT spreading activation formula represented Equation 1:   $$(y) = \\sum_x {f(x,y) \\cdot (x)} + c(y)$$,   \\(c(y)\\) represents baseline activation y.   \\(\\alpha\\) represents proximity node network.   \\(t\\) represents iteration number","code":""},{"path":"https://labyrinth.yinchun.su/reference/spread_gram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate spreading activation in a network (Main function) — spread_gram","text":"","code":"spread_gram(   graph,   last_activation,   loose = 1,   max_iter = 1e+05,   threshold = 1,   threads = 0,   verbose = TRUE )"},{"path":"https://labyrinth.yinchun.su/reference/spread_gram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate spreading activation in a network (Main function) — spread_gram","text":"graph square matrix (dgCMatrix representing background graph. Inside adjacency matrix, row column matrix represents node graph. values matrix either 0 1 (either 0 larger 0), value 0 indicates relations two nodes. diagonal matrix 0, self-edges graph. last_activation vector containing last time activation rates nodes. sequence matrix. loose scalar numeric 0 1 determines loose (weight) calculation process. max_iter Max iteration times. threshold End threshold threads scalar numeric indicating parallel threads. Default 0 (auto-detected). verbose Show verbose message","code":""},{"path":"https://labyrinth.yinchun.su/reference/spread_gram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate spreading activation in a network (Main function) — spread_gram","text":"numeric vector contains new activation","code":""},{"path":"https://labyrinth.yinchun.su/reference/spread_gram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate spreading activation in a network (Main function) — spread_gram","text":"","code":"# The graph G data(\"graph\", package = \"labyrinth\")  # The initial info last_activation = c(2, 4, 3, 2, 2, 1, 5)  results <- spread_gram(graph, last_activation) #> Iterated #0 times. Current loss: 0.0373226717617934 #> Convergent at #0 times. Current loss: 0.0373226717617934"},{"path":"https://labyrinth.yinchun.su/reference/spread_gram_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate spreading activation in a network (Only once) — spread_gram_1","title":"Simulate spreading activation in a network (Only once) — spread_gram_1","text":"ACT spreading activation formula represented Equation 1:   $$(y) = \\sum_x {f(x,y) \\cdot (x)} + c(y)$$,   \\(c(y)\\) represents baseline activation y.   \\(\\alpha\\) represents proximity node network.   \\(t\\) represents iteration number","code":""},{"path":"https://labyrinth.yinchun.su/reference/spread_gram_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate spreading activation in a network (Only once) — spread_gram_1","text":"","code":"spread_gram_1(graph, last_activation, loose = 1)"},{"path":"https://labyrinth.yinchun.su/reference/spread_gram_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate spreading activation in a network (Only once) — spread_gram_1","text":"graph square matrix (dgCMatrix representing background graph. Inside adjacency matrix, row column matrix represents node graph. values matrix either 0 1 (either 0 larger 0), value 0 indicates relations two nodes. diagonal matrix 0, self-edges graph. last_activation vector containing last time activation rates nodes. sequence matrix. loose scalar numeric 0 1 determines loose (weight) calculation process.","code":""},{"path":"https://labyrinth.yinchun.su/reference/spread_gram_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate spreading activation in a network (Only once) — spread_gram_1","text":"numeric vector contains new activation","code":""},{"path":"https://labyrinth.yinchun.su/reference/spread_gram_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate spreading activation in a network (Only once) — spread_gram_1","text":"","code":"library(labyrinth)  # The graph G data(\"graph\", package = \"labyrinth\")  # The initial info last_activation = c(2, 4, 3, 2, 2, 1, 5)  results <- spread_gram_1(graph, last_activation)"},{"path":"https://labyrinth.yinchun.su/reference/transfer_activation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the received activation in Spreading Activation (f) — transfer_activation","title":"Calculate the received activation in Spreading Activation (f) — transfer_activation","text":"function calculates next-time received activation value node y node x specific graph, based activation values neighbors (including y) weighting factor loose. formula \\(f^{t+1}(x,j) = l \\cdot s_k / \\sum_{j} {s_j}\\).","code":""},{"path":"https://labyrinth.yinchun.su/reference/transfer_activation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the received activation in Spreading Activation (f) — transfer_activation","text":"","code":"transfer_activation(graph, y, x, activation, loose = 1)"},{"path":"https://labyrinth.yinchun.su/reference/transfer_activation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the received activation in Spreading Activation (f) — transfer_activation","text":"graph square matrix (dgCMatrix representing background graph. Inside adjacency matrix, row column matrix represents node graph. values matrix either 0 1 (either 0 larger 0), value 0 indicates relations two nodes. diagonal matrix 0, self-edges graph. y index ID node specify attention place x index ID neighbor node y activation vector containing last-time activation values nodes. sequence matrix. loose scalar numeric 0 1 determines loose (weight) calculation process.","code":""},{"path":"https://labyrinth.yinchun.su/reference/transfer_activation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the received activation in Spreading Activation (f) — transfer_activation","text":"scalar value representing activation value node x","code":""},{"path":"https://labyrinth.yinchun.su/reference/transfer_activation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the received activation in Spreading Activation (f) — transfer_activation","text":"","code":"# make an adjacency matrix and randomly fill some cells with 1s mat <- matrix(sample(c(0,1), 100, replace = TRUE), 10, 10) diag(mat) <- 0 # remove self-loops  transfer_activation(mat, 3, 2, 1:10) #> [1] 0.1034483"},{"path":"https://labyrinth.yinchun.su/reference/update_gene_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Update gene symbol using NCBI Entrez Gene — update_gene_symbol","title":"Update gene symbol using NCBI Entrez Gene — update_gene_symbol","text":"Update gene symbol using NCBI Entrez Gene","code":""},{"path":"https://labyrinth.yinchun.su/reference/update_gene_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update gene symbol using NCBI Entrez Gene — update_gene_symbol","text":"","code":"update_gene_symbol(   gene.pool,   ncbi = NA,   species = c(\"Homo_sapiens\", \"Mus_musculus\", \"Pan_troglodytes\", \"Rattus_norvegicus\",     \"Archaea\", \"Bacteria\", \"Escherichia_coli_str._K-12_substr._MG1655\",     \"Pseudomonas_aeruginosa_PAO1\", \"Ascomycota\", \"Microsporidia\", \"Bos_taurus\",     \"Penicillium_rubens\", \"Saccharomyces_cerevisiae\", \"Anopheles_gambiae\",     \"Caenorhabditis_elegans\", \"Drosophila_melanogaster\", \"Canis_familiaris\",     \"Sus_scrofa\", \"Danio_rerio\", \"Gallus_gallus\", \"Xenopus_laevis\", \"Xenopus_tropicalis\",     \"Arabidopsis_thaliana\", \"Chlamydomonas_reinhardtii\",       \"Oryza_sativa\",     \"Zea_mays\", \"Plasmodium_falciparum\", \"Retroviridae\") )"},{"path":"https://labyrinth.yinchun.su/reference/update_gene_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update gene symbol using NCBI Entrez Gene — update_gene_symbol","text":"gene.pool gene list ncbi location NCBI file directory species Optional. specify species","code":""},{"path":"https://labyrinth.yinchun.su/reference/update_gene_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update gene symbol using NCBI Entrez Gene — update_gene_symbol","text":"vector latest gene symbols","code":""},{"path":[]},{"path":"https://labyrinth.yinchun.su/reference/update_gene_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update gene symbol using NCBI Entrez Gene — update_gene_symbol","text":"","code":"library(labyrinth) update_gene_symbol('IL-6') #> [1] \"IL6\""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v030","dir":"Changelog","previous_headings":"","what":"labyrinth v0.3.0","title":"labyrinth v0.3.0","text":"Updated docs","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v023","dir":"Changelog","previous_headings":"","what":"labyrinth v0.2.3","title":"labyrinth v0.2.3","text":"Added predict() function Added several data Bug fix","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v022","dir":"Changelog","previous_headings":"","what":"labyrinth v0.2.2","title":"labyrinth v0.2.2","text":"Added multi-threaded capability Added random walk Bug fix","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v021","dir":"Changelog","previous_headings":"","what":"labyrinth v0.2.1","title":"labyrinth v0.2.1","text":"Performance improvement Bug fix","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v020","dir":"Changelog","previous_headings":"","what":"labyrinth v0.2.0","title":"labyrinth v0.2.0","text":"Rewrote codes Dropped robust z score Applied Eigen MKL","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v011","dir":"Changelog","previous_headings":"","what":"labyrinth v0.1.1","title":"labyrinth v0.1.1","text":"Bug fix","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v010","dir":"Changelog","previous_headings":"","what":"labyrinth v0.1.0","title":"labyrinth v0.1.0","text":"Bug fix","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v005","dir":"Changelog","previous_headings":"","what":"labyrinth v0.0.5","title":"labyrinth v0.0.5","text":"Bug fix Remove stopword file","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v004","dir":"Changelog","previous_headings":"","what":"labyrinth v0.0.4","title":"labyrinth v0.0.4","text":"Bug fix Added stopword file","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v003","dir":"Changelog","previous_headings":"","what":"labyrinth v0.0.3","title":"labyrinth v0.0.3","text":"Bug fix","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v002","dir":"Changelog","previous_headings":"","what":"labyrinth v0.0.2","title":"labyrinth v0.0.2","text":"Added Windows support Added C++ version robust z score","code":""},{"path":"https://labyrinth.yinchun.su/news/index.html","id":"labyrinth-v001","dir":"Changelog","previous_headings":"","what":"labyrinth v0.0.1","title":"labyrinth v0.0.1","text":"Initial submission","code":""}]
